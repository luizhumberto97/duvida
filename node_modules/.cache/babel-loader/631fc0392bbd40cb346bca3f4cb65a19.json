{"ast":null,"code":"export default function getValidationErrors(err) {\n  const ValidationErrors = {};\n  err.inner.forEach(error => {\n    ValidationErrors[error.path] = error.message; // aqui pegamos a mensagem do erro\n  });\n  return ValidationErrors;\n}","map":{"version":3,"sources":["/home/luiz/estudos/06-gobarber-web/src/utils/getValidationErrors.ts"],"names":["getValidationErrors","err","ValidationErrors","inner","forEach","error","path","message"],"mappings":"AAOA,eAAe,SAASA,mBAAT,CAA6BC,GAA7B,EAA0D;AACvE,QAAMC,gBAAwB,GAAG,EAAjC;AAEAD,EAAAA,GAAG,CAACE,KAAJ,CAAUC,OAAV,CAAmBC,KAAD,IAAW;AAC3BH,IAAAA,gBAAgB,CAACG,KAAK,CAACC,IAAP,CAAhB,GAA+BD,KAAK,CAACE,OAArC,CAD2B,CACmB;AAE/C,GAHD;AAKA,SAAOL,gBAAP;AACD","sourcesContent":["import { ValidationError} from 'yup';\n\ninterface Errors{\n  // Para ser qualquer texto -> o key não quer dizer nada não muda nada -> só colocamos key porque é chave do objeto\n  [key:string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors{\n  const ValidationErrors: Errors = {};\n\n  err.inner.forEach((error) => {\n    ValidationErrors[error.path] = error.message; // aqui pegamos a mensagem do erro\n\n  });\n\n  return ValidationErrors;\n}\n"]},"metadata":{},"sourceType":"module"}