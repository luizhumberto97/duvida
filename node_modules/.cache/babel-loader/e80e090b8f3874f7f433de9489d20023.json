{"ast":null,"code":"var _jsxFileName = \"/home/luiz/estudos/06-gobarber-web/src/context/AuthContext.tsx\";\nimport React, { createContext, useCallback, useState } from 'react';\nimport api from '../services/api';\nconst AuthContext = createContext({});\n\nconst AuthProvider = ({\n  children\n}) => {\n  const [data, setData] = useState(() => {\n    const token = localStorage.getItem('@GoBarber:token');\n    const user = localStorage.getItem('@GoBarber:user');\n  });\n  const signIn = useCallback(async ({\n    email,\n    password\n  }) => {\n    const response = await api.post('sessions', {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    localStorage.setItem('@GoBarber:token', token);\n    localStorage.setItem('@GoBarber:user', JSON.stringify(user));\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      name: 'Diego',\n      signIn\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { AuthContext, AuthProvider };","map":{"version":3,"sources":["/home/luiz/estudos/06-gobarber-web/src/context/AuthContext.tsx"],"names":["React","createContext","useCallback","useState","api","AuthContext","AuthProvider","children","data","setData","token","localStorage","getItem","user","signIn","email","password","response","post","setItem","JSON","stringify","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,WAA9B,EAA2CC,QAA3C,QAA0D,OAA1D;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAiBC,MAAMC,WAAW,GAAGJ,aAAa,CAAkB,EAAlB,CAAjC;;AAEA,MAAMK,YAAsB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC9C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAY,MAAM;AAElD,UAAMO,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAd;AACA,UAAMC,IAAI,GAAGF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAb;AACC,GAJ+B,CAAhC;AAME,QAAME,MAAM,GAAGZ,WAAW,CAAC,OAAO;AAACa,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAP,KAA6B;AACtD,UAAMC,QAAQ,GAAG,MAAMb,GAAG,CAACc,IAAJ,CAAS,UAAT,EAAqB;AAC1CH,MAAAA,KAD0C;AAE1CC,MAAAA;AAF0C,KAArB,CAAvB;AAKA,UAAM;AAACN,MAAAA,KAAD;AAAQG,MAAAA;AAAR,QAAgBI,QAAQ,CAACT,IAA/B;AAEAG,IAAAA,YAAY,CAACQ,OAAb,CAAqB,iBAArB,EAAwCT,KAAxC;AACAC,IAAAA,YAAY,CAACQ,OAAb,CAAqB,gBAArB,EAAuCC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAvC;AAED,GAXyB,EAWvB,EAXuB,CAA1B;AAaF,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACS,MAAAA,IAAI,EAAE,OAAP;AAAgBR,MAAAA;AAAhB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,QADH,CADF;AAKD,CAzBA;;AA2BD,SAAQF,WAAR,EAAqBC,YAArB","sourcesContent":["import React, {createContext, useCallback, useState} from 'react';\nimport api from '../services/api';\n\ninterface AuthState{\n  token: string;\n  user: object;\n}\n\ninterface SignInCredentials{\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData{\n  name: string;\n  signIn(credentials: SignInCredentials): Promise<void>;\n}\n\n const AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\n const AuthProvider: React.FC = ({children}) => {\n  const [data, setData] = useState<AuthState>(() => {\n\n  const token = localStorage.getItem('@GoBarber:token');\n  const user = localStorage.getItem('@GoBarber:user');\n  })\n\n    const signIn = useCallback(async ({email, password}) => {\n      const response = await api.post('sessions', {\n        email,\n        password,\n      });\n\n      const {token, user} = response.data;\n\n      localStorage.setItem('@GoBarber:token', token);\n      localStorage.setItem('@GoBarber:user', JSON.stringify(user));\n\n    }, []);\n\n  return(\n    <AuthContext.Provider value={{name: 'Diego', signIn}}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport {AuthContext, AuthProvider};\n"]},"metadata":{},"sourceType":"module"}